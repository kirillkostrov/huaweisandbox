<template>
  <!-- Only one root node is allowed in template. -->
  <div class="container">    
    <div class="text-container">
      <div class="text-block">
        <text class="{{fontClass}}">
          {{text}}
        </text>
      </div>    
    </div>
    <div class="button-container">
      <input class="button" type="button" value="АНЕКДОТ" onclick="loadNew(1)"/>
      <input class="button button2" type="button" value="ИСТОРИЯ" onclick="loadNew(2)"/>
    </div>
  </div>
</template>

<style>
  .container {
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    padding: 20px;
  }

  .button-container {
    flex-direction: row;
    justify-content:flex-end;
    align-items: center;
    padding: 10px;
  }

  .text-container {
    flex-direction: column;
    justify-content: center;
    height: 100%;
    width: 100%;
    padding: 40px;
  }

  .text-block {
    width:100%;
  }

  .big-font {
    font-size: 50px;
  }

  .medium-font {
    font-size: 40px;
  }

  .small-font {
    font-size: 30px;
  }

  .button {
    color: #ffffff;
    background-color:#666666;
    border-radius: 15px;
    font-size: 40px;
    width: 45%;
    height: 90px;
    margin: 15px;
    
  }

  .button2 {
    margin-left: 20px;
  }
</style>

<script>
  import fetch from '@system.fetch'
  module.exports = {
    data: {
      componentData: {},
      text: '- Как только утром по телевидению начинается аэробика, мой муж\nтут же вскакивает с кровати.\n- Он так увлечен аэробикой в его-то годы?\n- Нет, сам он ею не занимается, а наблюдает в окно, как выполняет эти упражнения полуобнаженная молоденькая соседка.',
      fontClass: 'big-font'      
    },
    onInit() {
      this.$page.setTitleBar({
        text: 'menu',
        textColor: '#ffffff',
        backgroundColor: '#666666',
        backgroundOpacity: 1,
        menu: true
      });

      this.loadNew(1);
    },
    loadNew(jokeCat) {
      let context = this;
      fetch.fetch(
        {
          url:"http://rzhunemogu.ru/RandJSON.aspx?CType="+jokeCat,
          success: function(data)  {
            try {
              //console.log(data.data.replace(/(?:\r\n|\r|\n)/g, '<br>'));
              //let result = JSON.parse(data.data.replace(/(?:\r\n|\r|\n)/g, '<br>'));             
              //let finalText = result.content.split('<br>').join('\n'); 

              let finalText = data.data.replace("{\"content\":\"", "").replace("\"}", "");

              if (finalText.length < 256) {
                context.fontClass = 'big-font';
              } else if (finalText.length > 600) {
                context.fontClass = 'small-font';
              } else {
                context.fontClass = 'medium-font';
              }
              console.log(context.fontClass);
              context.text = finalText;              
              } catch (error) {
                console.log(error);
                context.fontClass = 'big-font';
                context.text = 'Ошибка загрузки, попробуйте ещё раз'; 
              }
          },
          fail: function(data, code) {
            console.log("handling fail, code=" + code);
          }
        })            
    }
  }
</script>